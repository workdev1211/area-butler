export const IntlKeys = {
  common: {
    showMore: "common.showMore",
    loading: "common.loading",
    pageLoading: "common.pageLoading",
    new: "common.new",
    name: "common.name",
    email: "common.email",
    value: "common.value",
    back: "common.back",
    send: "common.send",
    address: "common.address",
    noResults: "common.noResults",
    searching: "common.searching",
    close: "common.close",
    cancel: "common.cancel",
    open: "common.open",
    apply: "common.apply",
    import: "common.import",
    actions: "common.actions",
    dataImported: "common.dataImported",
    errorOccurred: "common.errorOccurred",
    status: "common.status",
    price: "common.price",
    objectSuccessfullyDeleted: "common.objectSuccessfullyDeleted",
    objectDeleteConfirmation: "common.objectDeleteConfirmation",
    objectDeleteTitle: "common.objectDeleteTitle",
    page: "common.page",
    delete: "common.delete",
    deleteAll: "common.deleteAll",
    copy: "common.copy",
    unlock: "common.unlock",
    export: "common.export",
    unknown: "common.unknown",
    goToPage: "common.goToPage",
    show: "common.show",
    create: "common.create",
    save: "common.save",
    searchFor: "common.searchFor",
    from: "common.from",
    statuses: {
      ACTIVE: "common.statuses.ACTIVE",
      INACTIVE: "common.statuses.INACTIVE",
    },
    yes: "common.yes",
    no: "common.no",
    marketingType: "common.marketingType",
    transportationTypes: {
      walking: "common.transportationTypes.walking",
      driving: "common.transportationTypes.driving",
      cycling: "common.transportationTypes.cycling",
    },
    myLocation: "common.myLocation",
    userDefined: "common.userDefined",
    custom: "common.custom",
    successfullyCopiedToClipboard: "common.successfullyCopiedToClipboard",
    qrCode: "common.qrCode",
    pdf: "common.pdf",
    png: "common.png",
    transportationUnits: {
      KILOMETERS: "common.transportationUnits.KILOMETERS",
      MINUTES: "common.transportationUnits.KILOMETERS",
    },
    description: "common.description",
    addressExpired: "common.addressExpired",
  },

  imageUpload: {
    supportedFormats: "imageUpload.supportedFormats",
    defaultLabel: "imageUpload.defaultLabel",
    defaultUploadLabel: "imageUpload.defaultUploadLabel",
    sizeError: "imageUpload.sizeError",
  },

  googleAutocomplete: {
    enterAddress: "googleAutocomplete.enterAddress",
  },

  nav: {
    environmentalAnalysis: "nav.environmentalAnalysis",
    realEstates: "nav.realEstates",
    potentialCustomers: "nav.potentialCustomers",
    cards: "nav.cards",
    profile: "nav.profile",
    logout: "nav.logout",
    menu: "nav.menu",
  },

  environmentalAnalysis: {
    createBtn: "environmentalAnalysis.createBtn",
    updateBtn: "environmentalAnalysis.updateBtn",
    error: "environmentalAnalysis.error",
    queryLimitReached: "environmentalAnalysis.queryLimitReached",
    modalBtn: "environmentalAnalysis.modalBtn",
    addressOfTheRealState: "environmentalAnalysis.addressOfTheRealState",
    currentLocation: "environmentalAnalysis.currentLocation",
    lastEntries: "environmentalAnalysis.lastEntries",
    analysisRadius: "environmentalAnalysis.analysisRadius",
    availableIn: "environmentalAnalysis.availableIn",
    unit: "environmentalAnalysis.unit",
    targetGroups: "environmentalAnalysis.targetGroups",
    importantAddresses: "environmentalAnalysis.importantAddresses",
    addAddress: "environmentalAnalysis.addAddress",
    designation: "environmentalAnalysis.designation",
    airport: "environmentalAnalysis.airport",
    station: "environmentalAnalysis.station",
    shuttleRoute: "environmentalAnalysis.shuttleRoute",
    highlightOfRegion: "environmentalAnalysis.highlightOfRegion",
    ownDesignation: "environmentalAnalysis.ownDesignation",
  },

  snapshotEditor: {
    map: "snapshotEditor.map",
    needsFilter: "snapshotEditor.needsFilter",
    editor: "snapshotEditor.editor",
    export: "snapshotEditor.export",
    current: "snapshotEditor.current",
    cardInYourBranding: "snapshotEditor.cardInYourBranding",
    talkToUs: "snapshotEditor.talkToUs",
    hideIndividualPOIs: "snapshotEditor.hideIndividualPOIs",
    POIDetailFilter: "snapshotEditor.POIDetailFilter",
    none: "snapshotEditor.none",
    distance: "snapshotEditor.distance",
    showOnly: "snapshotEditor.showOnly",
    meterRadius: "snapshotEditor.meterRadius",
    quantity: "snapshotEditor.quantity",
    showOnlyTheText: "snapshotEditor.showOnlyTheText",
    POIs: "snapshotEditor.POIs",
    enterValidValue: "snapshotEditor.enterValidValue",
    configuration: "snapshotEditor.configuration",
    configurationDesc: "snapshotEditor.configurationDesc",
    templates: "snapshotEditor.templates",
    cardStyle: "snapshotEditor.cardStyle",
    menuStyle: "snapshotEditor.menuStyle",
    standard: "snapshotEditor.standard",
    minimal: "snapshotEditor.minimal",
    preselectedProfile: "snapshotEditor.preselectedProfile",
    showIcon: "snapshotEditor.showIcon",
    showAddress: "snapshotEditor.showAddress",
    showStreetViewLink: "snapshotEditor.showStreetViewLink",
    groupPOIOnZoom: "snapshotEditor.groupPOIOnZoom",
    hideIsochrones: "snapshotEditor.hideIsochrones",
    objectInfoDisplayed: "snapshotEditor.objectInfoDisplayed",
    minimizeOnIframe: "snapshotEditor.minimizeOnIframe",
    referenceCard: "snapshotEditor.referenceCard",
    needsFilterForRealEstate: "snapshotEditor.needsFilterForRealEstate",
    resetColor: "snapshotEditor.resetColor",
    resetIcon: "snapshotEditor.resetIcon",
    objectTooltip: "snapshotEditor.objectTooltip",
    hideCost: "snapshotEditor.hideCost",
    showObjectType: "snapshotEditor.showObjectType",
    hideOtherPropertyFeatures: "snapshotEditor.hideOtherPropertyFeatures",
    primaryColor: "snapshotEditor.primaryColor",
    cardsIcon: "snapshotEditor.cardsIcon",
    uploadIcon: "snapshotEditor.uploadIcon",
    addressNotPublished: "snapshotEditor.addressNotPublished",
    selectRatio: "snapshotEditor.selectRatio",
    selectRatioTooltip: "snapshotEditor.selectRatioTooltip",
    userDefined: "snapshotEditor.userDefined",
    showQRCode: "snapshotEditor.showQRCode",
    crop: "snapshotEditor.crop",
    cropSuccess: "snapshotEditor.cropSuccess",
    portrait: "snapshotEditor.portrait",
    helpAndFeedback: "snapshotEditor.helpAndFeedback",
    startTour: "snapshotEditor.startTour",
    feedbackQuestion: "snapshotEditor.feedbackQuestion",
    supportQuestion: "snapshotEditor.supportQuestion",
    specifyTypeOfFeedback: "snapshotEditor.specifyTypeOfFeedback",
    enterDescription: "snapshotEditor.enterDescription",
    typeOfFeedback: "snapshotEditor.typeOfFeedback",
    improvement: "snapshotEditor.improvement",
    error: "snapshotEditor.error",
    other: "snapshotEditor.other",
    pleaseSelect: "snapshotEditor.pleaseSelect",
    moreInfo: "snapshotEditor.moreInfo",
    objectType: "snapshotEditor.objectType",
    size: "snapshotEditor.size",
    directlyToTheObject: "snapshotEditor.directlyToTheObject",
    hide: "snapshotEditor.hide",
    exportTab: {
      mapSection: "snapshotEditor.exportTab.mapSection",
      mapSectionDescription: "snapshotEditor.exportTab.mapSectionDescription",
      useScreenshotBtn: "snapshotEditor.exportTab.useScreenshotBtn",
      deleteAllMapSectionsConfirmation:
        "snapshotEditor.exportTab.deleteAllMapSectionsConfirmation",
      deleteThisMapSectionsConfirmation:
        "snapshotEditor.exportTab.deleteThisMapSectionsConfirmation",
      myLocation: "snapshotEditor.exportTab.myLocation",
      unlockInteractiveMap: "snapshotEditor.exportTab.unlockInteractiveMap",
      digitalMedia: "snapshotEditor.exportTab.digitalMedia",
      digitalMediaDescription:
        "snapshotEditor.exportTab.digitalMediaDescription",
      publicLink: "snapshotEditor.exportTab.publicLink",
      qrCodeLink: "snapshotEditor.exportTab.qrCodeLink",
      download: "snapshotEditor.exportTab.download",
      qrCodeFileName: "snapshotEditor.exportTab.qrCodeFileName",
      legendPOIIcons: "snapshotEditor.exportTab.legendPOIIcons",
      iframeForWebsite: "snapshotEditor.exportTab.iframeForWebsite",
      unlockLocationExpose: "snapshotEditor.exportTab.unlockLocationExpose",
      reportsAndLocationExpose:
        "snapshotEditor.exportTab.reportsAndLocationExpose",
      reportsAndLocationExposeDescription:
        "snapshotEditor.exportTab.reportsAndLocationExposeDescription",
      generateLocationExpose: "snapshotEditor.exportTab.generateLocationExpose",
      environmentalAnalysisPDF:
        "snapshotEditor.exportTab.environmentalAnalysisPDF",
      environmentalAnalysisDOC:
        "snapshotEditor.exportTab.environmentalAnalysisDOC",
      environmentalAnalysis: "snapshotEditor.exportTab.environmentalAnalysis",
      overviewPDF: "snapshotEditor.exportTab.overviewPDF",
      environmentalAnalysisExport:
        "snapshotEditor.exportTab.environmentalAnalysisExport",
      cheatSheetExport: "snapshotEditor.exportTab.cheatSheetExport",
      pictures: "snapshotEditor.exportTab.pictures",
      insights: "snapshotEditor.exportTab.insights",
      censusAtlas: "snapshotEditor.exportTab.censusAtlas",
      federalElections: "snapshotEditor.exportTab.federalElections",
      particularMatterPollution:
        "snapshotEditor.exportTab.particularMatterPollution",
      tooManyGroups: "snapshotEditor.exportTab.tooManyGroups",
      selectedPictures: "snapshotEditor.exportTab.selectedPictures",
      noMapSelectionsSaved: "snapshotEditor.exportTab.noMapSelectionsSaved",
      selectedLocalities: "snapshotEditor.exportTab.selectedLocalities",
      cardLegend: "snapshotEditor.exportTab.cardLegend",
      neighborhoodDemographic:
        "snapshotEditor.exportTab.neighborhoodDemographic",
      surroundings: "snapshotEditor.exportTab.surroundings",
      pleaseCompleteAllSteps: "snapshotEditor.exportTab.pleaseCompleteAllSteps",
      generateAIText: "snapshotEditor.exportTab.generateAIText",
      locationDescription: "snapshotEditor.exportTab.locationDescription",
      targetGroup: "snapshotEditor.exportTab.targetGroup",
      targetGroupName: "snapshotEditor.exportTab.targetGroupName",
      textTonality: "snapshotEditor.exportTab.textTonality",
      desiredTextLength: "snapshotEditor.exportTab.desiredTextLength",
      customTextTooltip: "snapshotEditor.exportTab.customTextTooltip",
      furtherAIInstructions: "snapshotEditor.exportTab.furtherAIInstructions",
      resultsText: "snapshotEditor.exportTab.resultsText",
      userDefinedText: "snapshotEditor.exportTab.userDefinedText",
      aiFieldOfKnowledge: "snapshotEditor.exportTab.aiFieldOfKnowledge",
      POITable: "snapshotEditor.exportTab.POITable",
      mediaAndFormat: "snapshotEditor.exportTab.mediaAndFormat",
      enterYourOwnTargetGroup:
        "snapshotEditor.exportTab.enterYourOwnTargetGroup",
      defaultTargetGroupName: "snapshotEditor.exportTab.defaultTargetGroupName",
      transparentBackground: "snapshotEditor.exportTab.transparentBackground",
      selectedMapSections: "snapshotEditor.exportTab.selectedMapSections",
      costs: "snapshotEditor.exportTab.costs",
      overview: "snapshotEditor.exportTab.overview",
      sendTo: "snapshotEditor.exportTab.sendTo",
      surroundingsHeader: "snapshotEditor.exportTab.surroundingsHeader",
      distance: "snapshotEditor.exportTab.distance",
      scanAndNew: "snapshotEditor.exportTab.scanAndNew",
      discoverResidentialArea:
        "snapshotEditor.exportTab.discoverResidentialArea",
      mobilityCriteria: "snapshotEditor.exportTab.mobilityCriteria",
      yourNewProperty: "snapshotEditor.exportTab.yourNewProperty",
      nextPlace: "snapshotEditor.exportTab.nextPlace",
      descriptionPerKm: "snapshotEditor.exportTab.descriptionPerKm",
      germany: "snapshotEditor.exportTab.germany",
      resultSecondVote: "snapshotEditor.exportTab.resultSecondVote",
      resultLastElection: "snapshotEditor.exportTab.resultLastElection",
      particlePollutionDescription:
        "snapshotEditor.exportTab.particlePollutionDescription",
      summary: "snapshotEditor.exportTab.summary",
      locationOverview: "snapshotEditor.exportTab.locationOverview",
      noLocationSelected: "snapshotEditor.exportTab.noLocationSelected",
      automaticTextsTitle: "snapshotEditor.exportTab.automaticTextsTitle",
      automaticTextsDescription:
        "snapshotEditor.exportTab.automaticTextsDescription",
      unlockAiTexts: "snapshotEditor.exportTab.unlockAiTexts",
      aiTextsFromMagicPen: "snapshotEditor.exportTab.aiTextsFromMagicPen",
      aiDescription: "snapshotEditor.exportTab.aiDescription",
      pleaseEnterRequirements:
        "snapshotEditor.exportTab.pleaseEnterRequirements",
      discardText: "snapshotEditor.exportTab.discardText",
      applyChange: "snapshotEditor.exportTab.applyChange",
      discardChange: "snapshotEditor.exportTab.discardChange",
      improveDescription: "snapshotEditor.exportTab.improveDescription",
      improvePlaceholder: "snapshotEditor.exportTab.improvePlaceholder",
      enterNewWishes: "snapshotEditor.exportTab.enterNewWishes",
      improveLastText: "snapshotEditor.exportTab.improveLastText",
      generate: "snapshotEditor.exportTab.generate",
      errorOccurred: "snapshotEditor.exportTab.errorOccurred",
      contentDetails: "snapshotEditor.exportTab.contentDetails",
      targetFormat: "snapshotEditor.exportTab.targetFormat",
      generateQuestion: "snapshotEditor.exportTab.generateQuestion",
      realEstate: "snapshotEditor.exportTab.realEstate",
      realEstatePlaceholder: "snapshotEditor.exportTab.realEstatePlaceholder",
      selectRealEstate: "snapshotEditor.exportTab.selectRealEstate",
      objectType: "snapshotEditor.exportTab.objectType",
      copyTheText: "snapshotEditor.exportTab.copyTheText",
      yourRequestToAI: "snapshotEditor.exportTab.yourRequestToAI",
      textualInformation: "snapshotEditor.exportTab.textualInformation",
      ownFiles: "snapshotEditor.exportTab.ownFiles",
      ownFilesDescription: "snapshotEditor.exportTab.ownFilesDescription",
      loadingClickAgain: "snapshotEditor.exportTab.loadingClickAgain",
      saveTargetGroup: "snapshotEditor.exportTab.saveTargetGroup",
      interactiveMap: "snapshotEditor.exportTab.interactiveMap",
      openAITypesSideBarLabel: {
        LOCATION_DESCRIPTION:
          "snapshotEditor.exportTab.openAITypesSideBarLabel.LOCATION_DESCRIPTION",
        REAL_ESTATE_DESCRIPTION:
          "snapshotEditor.exportTab.openAITypesSideBarLabel.REAL_ESTATE_DESCRIPTION",
        LOCATION_REAL_ESTATE_DESCRIPTION:
          "snapshotEditor.exportTab.openAITypesSideBarLabel.LOCATION_REAL_ESTATE_DESCRIPTION",
        FORMAL_TO_INFORMAL:
          "snapshotEditor.exportTab.openAITypesSideBarLabel.FORMAL_TO_INFORMAL",
        GENERAL_QUESTION:
          "snapshotEditor.exportTab.openAITypesSideBarLabel.GENERAL_QUESTION",
      },
      openAITypesOptionLabel: {
        LOCATION_DESCRIPTION:
          "snapshotEditor.exportTab.openAITypesOptionLabel.LOCATION_DESCRIPTION",
        REAL_ESTATE_DESCRIPTION:
          "snapshotEditor.exportTab.openAITypesOptionLabel.REAL_ESTATE_DESCRIPTION",
        LOCATION_REAL_ESTATE_DESCRIPTION:
          "snapshotEditor.exportTab.openAITypesOptionLabel.LOCATION_REAL_ESTATE_DESCRIPTION",
        FORMAL_TO_INFORMAL:
          "snapshotEditor.exportTab.openAITypesOptionLabel.FORMAL_TO_INFORMAL",
        GENERAL_QUESTION:
          "snapshotEditor.exportTab.openAITypesOptionLabel.GENERAL_QUESTION",
      },
      publicLinks: "snapshotEditor.exportTab.publicLinks",
    },
    pointsOfInterest: {
      label: "snapshotEditor.pointsOfInterest.label",
      traffic: "snapshotEditor.pointsOfInterest.traffic",
      supplies: "snapshotEditor.pointsOfInterest.supplies",
      education: "snapshotEditor.pointsOfInterest.education",
      leisure: "snapshotEditor.pointsOfInterest.leisure",
      sport: "snapshotEditor.pointsOfInterest.sport",
      health: "snapshotEditor.pointsOfInterest.health",
      infrastructure: "snapshotEditor.pointsOfInterest.infrastructure",
      tourism: "snapshotEditor.pointsOfInterest.tourism",
      description: "snapshotEditor.pointsOfInterest.description",
      station: "snapshotEditor.pointsOfInterest.station",
      bus_stop: "snapshotEditor.pointsOfInterest.bus_stop",
      motorway_link: "snapshotEditor.pointsOfInterest.motorway_link",
      charging_station: "snapshotEditor.pointsOfInterest.charging_station",
      fuel: "snapshotEditor.pointsOfInterest.fuel",
      supermarket: "snapshotEditor.pointsOfInterest.supermarket",
      chemist: "snapshotEditor.pointsOfInterest.chemist",
      kiosk: "snapshotEditor.pointsOfInterest.kiosk",
      post_office: "snapshotEditor.pointsOfInterest.post_office",
      kindergarten: "snapshotEditor.pointsOfInterest.kindergarten",
      school: "snapshotEditor.pointsOfInterest.school",
      university: "snapshotEditor.pointsOfInterest.university",
      playground: "snapshotEditor.pointsOfInterest.playground",
      park: "snapshotEditor.pointsOfInterest.park",
      restaurant: "snapshotEditor.pointsOfInterest.restaurant",
      bar: "snapshotEditor.pointsOfInterest.bar",
      pub: "snapshotEditor.pointsOfInterest.pub",
      theatre: "snapshotEditor.pointsOfInterest.theatre",
      fitness_centre: "snapshotEditor.pointsOfInterest.fitness_centre",
      swimming_pool: "snapshotEditor.pointsOfInterest.swimming_pool",
      sports_centre: "snapshotEditor.pointsOfInterest.sports_centre",
      sports_hall: "snapshotEditor.pointsOfInterest.sports_hall",
      pharmacy: "snapshotEditor.pointsOfInterest.pharmacy",
      doctors: "snapshotEditor.pointsOfInterest.doctors",
      dentist: "snapshotEditor.pointsOfInterest.dentist",
      clinic: "snapshotEditor.pointsOfInterest.clinic",
      hospital: "snapshotEditor.pointsOfInterest.hospital",
      surface: "snapshotEditor.pointsOfInterest.surface",
      underground: "snapshotEditor.pointsOfInterest.underground",
      wind_turbine: "snapshotEditor.pointsOfInterest.wind_turbine",
      tower: "snapshotEditor.pointsOfInterest.tower",
      pole: "snapshotEditor.pointsOfInterest.pole",
      hotel: "snapshotEditor.pointsOfInterest.hotel",
      museum: "snapshotEditor.pointsOfInterest.museum",
      attraction: "snapshotEditor.pointsOfInterest.attraction",
      "multi-storey": "snapshotEditor.pointsOfInterest.multi-storey",
      distance: "snapshotEditor.pointsOfInterest.distance",
      footpath: "snapshotEditor.pointsOfInterest.footpath",
      bicycle: "snapshotEditor.pointsOfInterest.bicycle",
      auto: "snapshotEditor.pointsOfInterest.auto",
    },
    positionIndices: {
      label: "snapshotEditor.positionIndices.label",
      description: "snapshotEditor.positionIndices.description",
      notAvailable: "snapshotEditor.positionIndices.notAvailable",
      evening_entertainment:
        "snapshotEditor.positionIndices.evening_entertainment",
      health: "snapshotEditor.positionIndices.health",
      near_supply: "snapshotEditor.positionIndices.near_supply",
      public_transport: "snapshotEditor.positionIndices.public_transport",
      kids: "snapshotEditor.positionIndices.kids",
      culture: "snapshotEditor.positionIndices.culture",
      sports: "snapshotEditor.positionIndices.sports",
      individual_mobility: "snapshotEditor.positionIndices.individual_mobility",
      tourism: "snapshotEditor.positionIndices.tourism",
    },
    socialDemographics: {
      label: "snapshotEditor.socialDemographics.label",
      description: "snapshotEditor.socialDemographics.description",
      censusData: "snapshotEditor.socialDemographics.censusData",
      federalElections: "snapshotEditor.socialDemographics.federalElections",
      politicalParty: "snapshotEditor.socialDemographics.politicalParty",
    },
    environmentInfo: {
      label: "snapshotEditor.environmentInfo.label",
      description: "snapshotEditor.environmentInfo.description",
      particulateMatterPollution:
        "snapshotEditor.environmentInfo.particulateMatterPollution",
      avgLoad: "snapshotEditor.environmentInfo.avgLoad",
      daysAboveLimit: "snapshotEditor.environmentInfo.daysAboveLimit",
    },
    economicMetric: {
      label: "snapshotEditor.economicMetric.label",
      description: "snapshotEditor.economicMetric.description",
      contactUs: "snapshotEditor.economicMetric.contactUs",
    },
    notAllowedToUse: "snapshotEditor.notAllowedToUse",
    screenshotName: "snapshotEditor.screenshotName",
  },

  realEstate: {
    sync: "realEstate.sync",
    syncCRM: "realEstate.syncCRM",
    importCSV: "realEstate.importCSV",
    createObject: "realEstate.createObject",
    linkedCardSnippet: "realEstate.linkedCardSnippet",
    csvImportError: "realEstate.csvImportError",
    csvImportErrorStructure: "realEstate.csvImportErrorStructure",
    csvImportSuccess: "realEstate.csvImportSuccess",
    csvImported: "realEstate.csvImported",
    paymentMethods: "realEstate.paymentMethods",
    csvImportPrepareText: "realEstate.csvImportPrepareText",
    csvImportPrepareDescription: "realEstate.csvImportPrepareDescription",
    csvImportExampleCsv: "realEstate.csvImportExampleCsv",
    csvImportExampleXls: "realEstate.csvImportExampleXls",
    crmImported: "realEstate.crmImported",
    crmImportSuccess: "realEstate.crmImportSuccess",
    syncErrorOnImporting: "realEstate.syncErrorOnImporting",
    syncCompleted: "realEstate.syncCompleted",
    syncPropertyFailed: "realEstate.syncPropertyFailed",
    synchronized: "realEstate.synchronized",
    setFilter: "realEstate.setFilter",
    equipment: "realEstate.equipment",
    note: "realEstate.note",
    createdOn: "realEstate.createdOn",
    lastCall: "realEstate.lastCall",
    numberOfVisits: "realEstate.numberOfVisits",
    addressDisplayed: "realEstate.addressDisplayed",
    newObject: "realEstate.newObject",
    unknownObject: "realEstate.unknownObject",
    objectSavedSuccessfully: "realEstate.objectSavedSuccessfully",
    objectErrorWhileSaving: "realEstate.objectErrorWhileSaving",
    enterExtraStatus: "realEstate.enterExtraStatus",
    enterObjectName: "realEstate.enterObjectName",
    enterValidUrl: "realEstate.enterValidUrl",
    enterRealEstateAddress: "realEstate.enterRealEstateAddress",
    showInSnippet: "realEstate.showInSnippet",
    objectName: "realEstate.objectName",
    enterObjectNamePlaceholder: "realEstate.enterObjectNamePlaceholder",
    externalLink: "realEstate.externalLink",
    externalLinkPlaceholder: "realEstate.externalLinkPlaceholder",
    minPrice: "realEstate.minPrice",
    pricePlaceholder: "realEstate.pricePlaceholder",
    maxPrice: "realEstate.maxPrice",
    costType: "realEstate.costType",
    costTypePlaceholder: "realEstate.costTypePlaceholder",
    statuses: {
      IN_PREPARATION: "realEstate.statuses.IN_PREPARATION",
      FOR_RENT: "realEstate.statuses.FOR_RENT",
      FOR_SALE: "realEstate.statuses.FOR_SALE",
      RENTED: "realEstate.statuses.RENTED",
      SOLD: "realEstate.statuses.SOLD",
      NEW_CONSTRUCTION: "realEstate.statuses.NEW_CONSTRUCTION",
      ARCHIVED: "realEstate.statuses.ARCHIVED",
      RESERVED: "realEstate.statuses.RESERVED",
      MARKET_OBSERVATION: "realEstate.statuses.MARKET_OBSERVATION",
    },
    costTypes: {
      RENT_MONTHLY_COLD: "realEstate.costTypes.RENT_MONTHLY_COLD",
      RENT_MONTHLY_WARM: "realEstate.costTypes.RENT_MONTHLY_WARM",
      SELL: "realEstate.costTypes.SELL",
    },
    realEstateSize: "realEstate.realEstateSize",
    realEstateSizePlaceholder: "realEstate.realEstateSizePlaceholder",
    propertySize: "realEstate.propertySize",
    propertySizePlaceholder: "realEstate.propertySizePlaceholder",
    energyEfficiency: "realEstate.energyEfficiency",
    energyEfficiencyPlaceholder: "realEstate.energyEfficiencyPlaceholder",
    furnishing: {
      GARDEN: "realEstate.furnishing.GARDEN",
      BALCONY: "realEstate.furnishing.BALCONY",
      BASEMENT: "realEstate.furnishing.BASEMENT",
      GUEST_REST_ROOMS: "realEstate.furnishing.GUEST_REST_ROOMS",
      UNDERFLOOR_HEATING: "realEstate.furnishing.UNDERFLOOR_HEATING",
      GARAGE_PARKING_SPACE: "realEstate.furnishing.GARAGE_PARKING_SPACE",
      FITTED_KITCHEN: "realEstate.furnishing.FITTED_KITCHEN",
      ACCESSIBLE: "realEstate.furnishing.ACCESSIBLE",
    },
  },
  potentialCustomers: {
    createTargetGroup: "potentialCustomers.createTargetGroup",
    sendQuestionnaire: "potentialCustomers.sendQuestionnaire",
    livingConcept: "potentialCustomers.livingConcept",
    importantAddresses: "potentialCustomers.importantAddresses",
    customerDeletedSuccess: "potentialCustomers.customerDeletedSuccess",
    customerDeleteConfirm: "potentialCustomers.customerDeleteConfirm",
    customerDeleteTitle: "potentialCustomers.customerDeleteTitle",
    customerCreateTitle: "potentialCustomers.customerCreateTitle",
    customerCreatedSuccess: "potentialCustomers.customerCreatedSuccess",
    customerCreatedFailed: "potentialCustomers.customerCreatedFailed",
    pleaseEnterName: "potentialCustomers.pleaseEnterName",
    pleaseEnterEmail: "potentialCustomers.pleaseEnterEmail",
    approvalIsRequired: "potentialCustomers.approvalIsRequired",
    nameTitle: "potentialCustomers.nameTitle",
    emailTitle: "potentialCustomers.emailTitle",
    sentCopyEmail: "potentialCustomers.sentCopyEmail",
    whatHappenWhenYouClick: "potentialCustomers.whatHappenWhenYouClick",
    questionnaireText1: "potentialCustomers.questionnaireText1",
    questionnaireText2: "potentialCustomers.questionnaireText2",
    questionnaireText3: "potentialCustomers.questionnaireText3",
    questionnaireText4: "potentialCustomers.questionnaireText4",
    questionnaireText5: "potentialCustomers.questionnaireText5",
    customerAgreesToReceive: "potentialCustomers.customerAgreesToReceive",
    newTargetGroup: "potentialCustomers.newTargetGroup",
    unknownName: "potentialCustomers.unknownName",
    potentialCustomerSubmitSuccessful:
      "potentialCustomers.potentialCustomerSubmitSuccessful",
    potentialCustomerSubmitFailed:
      "potentialCustomers.potentialCustomerSubmitFailed",
    nameRequired: "potentialCustomers.nameRequired",
    nameOfTargetGroup: "potentialCustomers.nameOfTargetGroup",
    preferred: "potentialCustomers.preferred",
    myFavorite: "potentialCustomers.myFavorite",
    typesOfTransportations: "potentialCustomers.typesOfTransportations",
    localities: "potentialCustomers.localities",
  },
  mapSnapshots: {
    copiedToClipboard: "mapSnapshots.copiedToClipboard",
    duplicateConfirmation: "mapSnapshots.duplicateConfirmation",
    duplicateFailed: "mapSnapshots.duplicateFailed",
    deleteConfirmation: "mapSnapshots.deleteConfirmation",
    deleteFailed: "mapSnapshots.deleteFailed",
    templateSaved: "mapSnapshots.templateSaved",
    openEditor: "mapSnapshots.openEditor",
    queryLimitReached: "mapSnapshots.queryLimitReached",
    startAnalysis: "mapSnapshots.startAnalysis",
    buyNewContingent: "mapSnapshots.buyNewContingent",
    noVisits: "mapSnapshots.noVisits",
    copyLink: "mapSnapshots.copyLink",
    cancelTemplate: "mapSnapshots.cancelTemplate",
    setAsTemplate: "mapSnapshots.setAsTemplate",
    duplicateCard: "mapSnapshots.duplicateCard",
    duplicateCardSuccessfully: "mapSnapshots.duplicateCardSuccessfully",
    settingSaved: "mapSnapshots.settingSaved",
    settingSavingError: "mapSnapshots.settingSavingError",
    changingNoteError: "mapSnapshots.changingNoteError",
    yourCardSnippet: "mapSnapshots.yourCardSnippet",
    noteField: "mapSnapshots.noteField",
    directLink: "mapSnapshots.directLink",
    htmlSnippet: "mapSnapshots.htmlSnippet",
  },
  yourProfile: {
    title: "yourProfile.title",
    profileUpdated: "yourProfile.profileUpdated",
    profileUpdateError: "yourProfile.profileUpdateError",
    pleaseEnterName: "yourProfile.pleaseEnterName",
    pleaseEnterEmail: "yourProfile.pleaseEnterEmail",
    yourEmail: "yourProfile.yourEmail",
    yourName: "yourProfile.yourName",
    logoSaved: "yourProfile.logoSaved",
    primaryColorSaved: "yourProfile.primaryColorSaved",
    exportSettingsReset: "yourProfile.exportSettingsReset",
    exportSettings: "yourProfile.exportSettings",
    exportSettingsDescription: "yourProfile.exportSettingsDescription",
    exportSettingsResetBtn: "yourProfile.exportSettingsResetBtn",
    yourPrimaryColor: "yourProfile.yourPrimaryColor",
    CRMSettings: "yourProfile.CRMSettings",
    CRMSettingsDescription: "yourProfile.CRMSettingsDescription",
    apiKey: "yourProfile.apiKey",
    connectionTestedSuccessfully: "yourProfile.connectionTestedSuccessfully",
    testAndSave: "yourProfile.testAndSave",
    token: "yourProfile.token",
    secret: "yourProfile.secret",
    endTestAndSelectPlan: "yourProfile.endTestAndSelectPlan",
    endTestAndSelectPlanBtn: "yourProfile.endTestAndSelectPlanBtn",
    yourCurrentPlan: "yourProfile.yourCurrentPlan",
    currentPlan: "yourProfile.currentPlan",
    managePaymentAndSubscription: "yourProfile.managePaymentAndSubscription",
    requestExecuted: "yourProfile.requestExecuted",
  },
  tour: {
    tourEndingError: "tour.tourEndingError",
    mayWeHelp: "tour.mayWeHelp",
    doNotShowAnyMore: "tour.doNotShowAnyMore",
    noInterest: "tour.noInterest",
    startIntroduction: "tour.startIntroduction",
    next: "tour.next",
    exit: "tour.exit",
    tourDescription: {
      search: "tour.tourDescription.search",
      result: "tour.tourDescription.result",
      customers: "tour.tourDescription.customers",
      realEstates: "tour.tourDescription.realEstates",
      profile: "tour.tourDescription.profile",
      editor: "tour.tourDescription.editor",
      intMap: "tour.tourDescription.intMap",
      intSearch: "tour.tourDescription.intSearch",
    },
    searchPage: {
      welcome: "tour.searchPage.welcome",
      welcomeDescription: "tour.searchPage.welcomeDescription",
      lastSearchedAddresses: "tour.searchPage.lastSearchedAddresses",
      myRealEstates: "tour.searchPage.myRealEstates",
      transportationType: "tour.searchPage.transportationType",
      myCustomers: "tour.searchPage.myCustomers",
      importantAddress: "tour.searchPage.importantAddress",
      localityParams: "tour.searchPage.localityParams",
      startAnalysis: "tour.searchPage.startAnalysis",
    },
    realEstatesPage: {
      welcome: "tour.realEstatesPage.welcome",
      tableOverview: "tour.realEstatesPage.tableOverview",
      searchBtn: "tour.realEstatesPage.searchBtn",
      editBtn: "tour.realEstatesPage.editBtn",
      deleteBtn: "tour.realEstatesPage.deleteBtn",
      createBtn: "tour.realEstatesPage.createBtn",
    },
    customersPage: {
      welcome: "tour.customersPage.welcome",
      tableOverview: "tour.customersPage.tableOverview",
      searchBtn: "tour.customersPage.searchBtn",
      editBtn: "tour.customersPage.editBtn",
      deleteBtn: "tour.customersPage.deleteBtn",
      createBtn: "tour.customersPage.createBtn",
    },
    profilePage: {
      welcome: "tour.profilePage.welcome",
      form: "tour.profilePage.form",
      subscription: "tour.profilePage.subscription",
      requestContingent: "tour.profilePage.requestContingent",
    },
    editorPage: {
      welcome: "tour.editorPage.welcome",
      mapNavbar: "tour.editorPage.mapNavbar",
      toggleBounds: "tour.editorPage.toggleBounds",
      zoomToBounds: "tour.editorPage.zoomToBounds",
      goFullscreen: "tour.editorPage.goFullscreen",
      takeMapPicture: "tour.editorPage.takeMapPicture",
      sideBar: "tour.editorPage.sideBar",
      tabsIcons: "tour.editorPage.tabsIcons",
      showMapMenuBar: "tour.editorPage.showMapMenuBar",
      resetPosition: "tour.editorPage.resetPosition",
      mapMenuContents: "tour.editorPage.mapMenuContents",
      saveBtn: "tour.editorPage.saveBtn",
    },
    intMapPage: {
      welcome: "tour.intMapPage.welcome",
      map: "tour.intMapPage.map",
      sideMenu: "tour.intMapPage.sideMenu",
      publishIframe: "tour.intMapPage.publishIframe",
      resetPosition: "tour.intMapPage.resetPosition",
      mapNavbar: "tour.intMapPage.mapNavbar",
      zoomToBounds: "tour.intMapPage.zoomToBounds",
      goFullscreen: "tour.intMapPage.goFullscreen",
      takePicture: "tour.intMapPage.takePicture",
    },
  },

  integration: {
    absentTokensError: "integration.absentTokensError",
    cropAndSend: "integration.cropAndSend",
    wrongExportTypeGiven: "integration.wrongExportTypeGiven",
  },
  
  screenshot: {
    cropSuccessfull: "screenshot.cropSuccessfull",
  }
};
